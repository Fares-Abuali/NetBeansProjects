package VisualRepresent;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import org.netbeans.lib.awtextra.AbsoluteConstraints;

public class QueueScroll extends javax.swing.JFrame {

    MyQueue<Object> q;
    JLabel[] lbls;
    int arrayOfLabelsSize;

    int xHead, yHead;
    int xTail, yTail;

    public QueueScroll() {

        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocation(300, 200);
        setTitle("Fares H.Abu Ali- MyQueue Visualization");
        setResizable(false);

        xHead = 45;
        yHead = 40;

        xTail = 45;
        yTail = 40;

        q = new MyQueue<>();
        //lbls = new JLabel[arrayOfLabelsSize];
        initComponents();
        pnlMainInside.setPreferredSize(new Dimension(400, 300));

        lblHead.setVisible(false);
        lblTail.setVisible(false);
        pnlMenue.setVisible(false);
        lblInfo.setVisible(false);

        //createQueueShape();
    }

    public void createQueueShape() {

        lblHead.setVisible(false);
        lblTail.setVisible(false);

        int X_Cordinate = 40;
        int Y_Cordinate = 90;

        for (int i = 0; i < arrayOfLabelsSize; i++) {

            lbls[i] = new JLabel();
            pnlMainInside.add(lbls[i], new AbsoluteConstraints(X_Cordinate, Y_Cordinate, 59, 40));// x,y,width,height
            lbls[i].setHorizontalAlignment(0);
            lbls[i].setText(i + "");

            lbls[i].setVisible(false);
            lbls[i].setBorder(new LineBorder(Color.black, 1));

            X_Cordinate += 60;

        }

    }

    public void fillLabels() {

        lblHead.setVisible(true);
        lblTail.setVisible(true);

        for (int i = 0; (i < q.getSize() && i < 1000); i++) {
            lbls[i].setFont(new Font("Tahoma", 1, 14));
            lbls[i].setHorizontalAlignment(SwingConstants.CENTER);
            lbls[i].setText(q.get(i) + "");
            lbls[i].setVisible(true);
        }

        pnlMainInside.add(lblHead, new AbsoluteConstraints(xHead, 40, 59, 40));// x,y,width,height
        xTail = 45 + 60 * (q.getSize() - 1);

        if (q.getSize() == 1) {
            pnlMainInside.add(lblTail, new AbsoluteConstraints(xTail, yTail - 20, 59, 40));// x,y,width,height
        } else {
            pnlMainInside.add(lblTail, new AbsoluteConstraints(xTail, yTail, 59, 40));// x,y,width,height
        }

    }

    public void clearQueue() {

        lblHead.setVisible(false);
        lblTail.setVisible(false);
        txtValue.setText("");

        if (lbls != null) {
            for (int i = 0; i < arrayOfLabelsSize; i++) {
                lbls[i].setVisible(false);
            }
        }

        q.clear();

        lblInfo.setText("Queue is empty.  Size = " + q.getSize());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlScroll = new javax.swing.JScrollPane();
        pnlMainInside = new javax.swing.JPanel();
        lblHead = new javax.swing.JLabel();
        lblTail = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();
        pnlMenue = new javax.swing.JPanel();
        lblValue = new javax.swing.JLabel();
        txtValue = new javax.swing.JTextField();
        btnEnqueue = new javax.swing.JButton();
        btnDequeue = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        cmboDataType = new javax.swing.JComboBox<>();
        lblInfo1 = new javax.swing.JLabel();
        rdbtn1 = new javax.swing.JRadioButton();
        rdbtn2 = new javax.swing.JRadioButton();
        rdbtn3 = new javax.swing.JRadioButton();
        rdbtn4 = new javax.swing.JRadioButton();
        rdbtn5 = new javax.swing.JRadioButton();
        lblInfo2 = new javax.swing.JLabel();
        btnMainMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlScroll.setBackground(new java.awt.Color(255, 255, 255));
        pnlScroll.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pnlScroll.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlScroll.setAutoscrolls(true);
        pnlScroll.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlScroll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pnlScroll.setMaximumSize(new java.awt.Dimension(100000, 100000));
        pnlScroll.setName(""); // NOI18N
        pnlScroll.setPreferredSize(new java.awt.Dimension(1000, 100));

        pnlMainInside.setBackground(new java.awt.Color(255, 255, 255));
        pnlMainInside.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pnlMainInside.setMaximumSize(new java.awt.Dimension(100000, 100000));
        pnlMainInside.setPreferredSize(new java.awt.Dimension(5000, 1000));

        lblHead.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblHead.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHead.setText("Head");

        lblTail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTail.setText("Tail");

        lblInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblInfo.setText("Queue is Empty");

        pnlMenue.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        pnlMenue.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblValue.setText("Enter a Value:");
        pnlMenue.add(lblValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 90, 40));

        txtValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValueActionPerformed(evt);
            }
        });
        txtValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValueKeyTyped(evt);
            }
        });
        pnlMenue.add(txtValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 100, 40));

        btnEnqueue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEnqueue.setText("enqueue");
        btnEnqueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnqueueActionPerformed(evt);
            }
        });
        pnlMenue.add(btnEnqueue, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, 40));

        btnDequeue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDequeue.setBorder(null);
        btnDequeue.setLabel("dequeue");
        btnDequeue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDequeueActionPerformed(evt);
            }
        });
        pnlMenue.add(btnDequeue, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 90, 40));

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.setBorder(null);
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnClearMouseReleased(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlMenue.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 90, 40));

        cmboDataType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmboDataType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Integer", "Character", "String", "Double/Float" }));
        cmboDataType.setSelectedIndex(-1);
        cmboDataType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboDataTypeActionPerformed(evt);
            }
        });

        lblInfo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblInfo1.setText("Choose Approximate Size of Queue:");
        lblInfo1.setToolTipText("");

        rdbtn1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbtn1.setText("10");
        rdbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn1ActionPerformed(evt);
            }
        });

        rdbtn2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbtn2.setText("50");
        rdbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn2ActionPerformed(evt);
            }
        });

        rdbtn3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbtn3.setText("100");
        rdbtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn3ActionPerformed(evt);
            }
        });

        rdbtn4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbtn4.setText("500");
        rdbtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn4ActionPerformed(evt);
            }
        });

        rdbtn5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdbtn5.setText("1000");
        rdbtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtn5ActionPerformed(evt);
            }
        });

        lblInfo2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblInfo2.setText("Choose Data Type:");
        lblInfo2.setToolTipText("");

        btnMainMenu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnMainMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exitAccount.png"))); // NOI18N
        btnMainMenu.setBorder(null);
        btnMainMenu.setContentAreaFilled(false);
        btnMainMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnMainMenuMouseReleased(evt);
            }
        });
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainInsideLayout = new javax.swing.GroupLayout(pnlMainInside);
        pnlMainInside.setLayout(pnlMainInsideLayout);
        pnlMainInsideLayout.setHorizontalGroup(
            pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainInsideLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHead, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(pnlMainInsideLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlMainInsideLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(pnlMenue, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainInsideLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainInsideLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(cmboDataType, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMainInsideLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainInsideLayout.createSequentialGroup()
                                .addComponent(rdbtn1)
                                .addGap(13, 13, 13)
                                .addComponent(rdbtn2)
                                .addGap(13, 13, 13)
                                .addComponent(rdbtn3))
                            .addGroup(pnlMainInsideLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(rdbtn4)
                                .addGap(16, 16, 16)
                                .addComponent(rdbtn5)))
                        .addGap(46, 46, 46)
                        .addComponent(btnMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        pnlMainInsideLayout.setVerticalGroup(
            pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainInsideLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainInsideLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblTail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblHead, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(lblInfo)
                .addGap(13, 13, 13)
                .addGroup(pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMenue, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMainInsideLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblInfo2)
                        .addGap(3, 3, 3)
                        .addComponent(cmboDataType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(lblInfo1)
                        .addGap(3, 3, 3)
                        .addGroup(pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainInsideLayout.createSequentialGroup()
                                .addGroup(pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdbtn1)
                                    .addComponent(rdbtn2)
                                    .addComponent(rdbtn3))
                                .addGap(12, 12, 12)
                                .addGroup(pnlMainInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdbtn4)
                                    .addComponent(rdbtn5)))
                            .addComponent(btnMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        pnlScroll.setViewportView(pnlMainInside);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnqueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnqueueActionPerformed

        String value = txtValue.getText();

        if (q.getSize() < arrayOfLabelsSize) {

            if (value.length() > 0) {

                q.enqueue(value);
                fillLabels();
            } else {

                JOptionPane.showMessageDialog(rootPane, "Please enter the value which will be enqueued");
            }

            if (q.getSize() > 0) {
                lblInfo.setText("Queue is not empty  Size = " + q.getSize());
            }

            //System.out.println(q);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Queue is Full!");

        }
    }//GEN-LAST:event_btnEnqueueActionPerformed

    private void btnDequeueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDequeueActionPerformed
        if (q.getSize() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Queue is empty");
        } else {
            q.dequeue();
            fillLabels();

            if (q.getSize() != 0) {
                lblInfo.setText("Queue is not empty.  Size = " + q.getSize());
            } else {
                lblInfo.setText("Queue is  empty.  Size = " + q.getSize());

            }

        }

        for (int i = q.getSize(); i < arrayOfLabelsSize; i++) {
            lbls[i].setVisible(false);
        }
        //System.out.println(q);
    }//GEN-LAST:event_btnDequeueActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearQueue();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnClearMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearMouseReleased

    private void txtValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValueKeyTyped

        char c = evt.getKeyChar();

        if (cmboDataType.getSelectedIndex() == 0) {// integer

            if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                    || (c == KeyEvent.VK_DELETE))) {

                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "You are allowed to enter digit only!");

            }

        } else if (cmboDataType.getSelectedIndex() == 1) {// char

            String value = txtValue.getText();

            if (value.length() > 0) {

                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "You are allowed to enter Characters (1 Byte) only!");
            }

        } else if (cmboDataType.getSelectedIndex() == 3) {//Double/Float

            if (c != '.' && !(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)
                    || (c == KeyEvent.VK_DELETE))) {

                getToolkit().beep();
                evt.consume();
                JOptionPane.showMessageDialog(rootPane, "You are allowed to enter digits or decimal points only!");
            }

        }


    }//GEN-LAST:event_txtValueKeyTyped

    private void cmboDataTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboDataTypeActionPerformed

        txtValue.setText("");
       // System.out.println(cmboDataType.getSelectedIndex());
      
    }//GEN-LAST:event_cmboDataTypeActionPerformed

    private void txtValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValueActionPerformed

    private void rdbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtn2ActionPerformed
        lblInfo.setVisible(true);
        pnlMenue.setVisible(true);
        clearQueue();

        rdbtn1.setSelected(false);
        rdbtn3.setSelected(false);
        rdbtn4.setSelected(false);
        rdbtn5.setSelected(false);

        arrayOfLabelsSize = Integer.parseInt(rdbtn2.getText());

        lbls = new JLabel[arrayOfLabelsSize];
        pnlMainInside.setPreferredSize(new Dimension(arrayOfLabelsSize * 65, 1000));

        createQueueShape();


    }//GEN-LAST:event_rdbtn2ActionPerformed

    private void rdbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtn1ActionPerformed
        lblInfo.setVisible(true);
        pnlMenue.setVisible(true);

        clearQueue();

        rdbtn2.setSelected(false);
        rdbtn3.setSelected(false);
        rdbtn4.setSelected(false);
        rdbtn5.setSelected(false);

        arrayOfLabelsSize = Integer.parseInt(rdbtn1.getText());
        lbls = new JLabel[arrayOfLabelsSize];

        pnlMainInside.setPreferredSize(new Dimension(arrayOfLabelsSize * 70, 1000));

        createQueueShape();

    }//GEN-LAST:event_rdbtn1ActionPerformed

    private void rdbtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtn3ActionPerformed
        lblInfo.setVisible(true);
        pnlMenue.setVisible(true);

        clearQueue();

        rdbtn1.setSelected(false);
        rdbtn2.setSelected(false);
        rdbtn4.setSelected(false);
        rdbtn5.setSelected(false);

        arrayOfLabelsSize = Integer.parseInt(rdbtn3.getText());
        lbls = new JLabel[arrayOfLabelsSize];

        pnlMainInside.setPreferredSize(new Dimension(arrayOfLabelsSize * 65, 1000));

        createQueueShape();

    }//GEN-LAST:event_rdbtn3ActionPerformed

    private void rdbtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtn4ActionPerformed

        lblInfo.setVisible(true);
        pnlMenue.setVisible(true);

        clearQueue();

        rdbtn1.setSelected(false);
        rdbtn2.setSelected(false);
        rdbtn3.setSelected(false);
        rdbtn5.setSelected(false);

        arrayOfLabelsSize = Integer.parseInt(rdbtn4.getText());
        lbls = new JLabel[arrayOfLabelsSize];

        pnlMainInside.setPreferredSize(new Dimension(arrayOfLabelsSize * 65, 1000));

        createQueueShape();

    }//GEN-LAST:event_rdbtn4ActionPerformed

    private void rdbtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtn5ActionPerformed

        lblInfo.setVisible(true);
        pnlMenue.setVisible(true);

        clearQueue();

        rdbtn1.setSelected(false);
        rdbtn2.setSelected(false);
        rdbtn3.setSelected(false);
        rdbtn4.setSelected(false);

        arrayOfLabelsSize = Integer.parseInt(rdbtn5.getText());
        lbls = new JLabel[arrayOfLabelsSize];

        pnlMainInside.setPreferredSize(new Dimension(arrayOfLabelsSize * 70, 1000));

        createQueueShape();

    }//GEN-LAST:event_rdbtn5ActionPerformed

    private void btnMainMenuMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMainMenuMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMainMenuMouseReleased

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
      
        
        MainFrame obj = new MainFrame();
        obj.setVisible(rootPaneCheckingEnabled);
        
                dispose();

    }//GEN-LAST:event_btnMainMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QueueScroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QueueScroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QueueScroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QueueScroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QueueScroll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDequeue;
    private javax.swing.JButton btnEnqueue;
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JComboBox<String> cmboDataType;
    private javax.swing.JLabel lblHead;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblInfo1;
    private javax.swing.JLabel lblInfo2;
    private javax.swing.JLabel lblTail;
    private javax.swing.JLabel lblValue;
    private javax.swing.JPanel pnlMainInside;
    private javax.swing.JPanel pnlMenue;
    private javax.swing.JScrollPane pnlScroll;
    private javax.swing.JRadioButton rdbtn1;
    private javax.swing.JRadioButton rdbtn2;
    private javax.swing.JRadioButton rdbtn3;
    private javax.swing.JRadioButton rdbtn4;
    private javax.swing.JRadioButton rdbtn5;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
}
