/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stackapplications;

import java.awt.Color;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Fares Abu Ali
 */
public class Visual extends javax.swing.JFrame {

    /**
     * Creates new form Visual
     */
    DefaultListModel dm = new DefaultListModel();
    DefaultListModel dm2 = new DefaultListModel();
    
    public Visual() {
        
        setResizable(false);

        //System.out.println(new Integer('a'));
        System.out.println("Examples:\n"
                + " 31+4-12/6*13  -->  31 4 + 12 6 / 13 * -\n"
                + " a-b+c*d       -->   a b - c d * +\n"
                + "a+c-h/b*r --> a c + h b / r * -\n"
                + "a+(c-h)/(b*r) --> a c h - b r * / +\n"
                + "(A+B/C*(D+E)-F) --> A B C / D E + * + F -\n"
                + " (1+9/3*(4+5)-6)  --> 1 9 3 / 4 5 + * + 6 -");
        initComponents();
        
        
        setTitle("Infix To Postfix/Prefix Calculator + Expression Evaluator");
        btnEvaluate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        txtFInfix = new javax.swing.JTextField();
        lblInfix = new javax.swing.JLabel();
        cmbo = new javax.swing.JComboBox<>();
        lblResult = new javax.swing.JLabel();
        lblConvert = new javax.swing.JLabel();
        btnEvaluate = new javax.swing.JButton();
        lblAns = new javax.swing.JLabel();
        lblForm = new javax.swing.JLabel();
        btnEvaluate1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst = new javax.swing.JList<>();
        lblConvert1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        pnlMain.setForeground(new java.awt.Color(255, 255, 255));
        pnlMain.setToolTipText("");

        txtFInfix.setBackground(new java.awt.Color(204, 255, 255));
        txtFInfix.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtFInfix.setToolTipText("");

        lblInfix.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblInfix.setText("Enter Infix Expression:");

        cmbo.setBackground(new java.awt.Color(51, 255, 255));
        cmbo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Postfix", "Prefix Using One Stack", "Prefix Using Two Stacks" }));
        cmbo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboActionPerformed(evt);
            }
        });

        lblResult.setBackground(new java.awt.Color(204, 255, 204));
        lblResult.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblResult.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblConvert.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblConvert.setText("Convert to:");

        btnEvaluate.setBackground(new java.awt.Color(0, 153, 102));
        btnEvaluate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEvaluate.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluate.setText("Evaluate");
        btnEvaluate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluateActionPerformed(evt);
            }
        });

        lblAns.setBackground(new java.awt.Color(204, 255, 204));
        lblAns.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblAns.setForeground(new java.awt.Color(0, 204, 102));
        lblAns.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAns.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblForm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnEvaluate1.setBackground(new java.awt.Color(255, 0, 102));
        btnEvaluate1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEvaluate1.setForeground(new java.awt.Color(255, 255, 255));
        btnEvaluate1.setText("CLEAR");
        btnEvaluate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluate1ActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lst.setBackground(new java.awt.Color(204, 255, 255));
        lst.setBorder(new javax.swing.border.MatteBorder(null));
        lst.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lst.setToolTipText("History:");
        lst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lst);

        lblConvert1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblConvert1.setText("History:");

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane3.setViewportView(txtArea);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(547, 547, 547)
                        .addComponent(lblConvert1))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInfix)
                            .addComponent(lblConvert))
                        .addGap(9, 9, 9)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFInfix, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(cmbo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(160, 160, 160)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblForm, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(btnEvaluate)
                                .addGap(11, 11, 11)
                                .addComponent(lblAns, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(btnEvaluate1)))
                        .addGap(160, 160, 160)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblConvert1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lblInfix)
                        .addGap(43, 43, 43)
                        .addComponent(lblConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtFInfix, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(cmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(lblForm, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(lblResult, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEvaluate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAns, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEvaluate1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboActionPerformed
        
        int index = cmbo.getSelectedIndex();
        
        String infixExp = txtFInfix.getText();
        
        lst.setModel(dm);
        // lstStackContent.setModel(dm2);
        dm.addElement(infixExp);
        
        if (CheckValidity.isValid(infixExp)) {
            
            switch (index) {
                
                case 0:
                    if (infixExp.length() == 0) {
                        JOptionPane.showMessageDialog(pnlMain, "Please enter an infix expression");
                        
                    } else {
                        InfixToPostfix ps = new InfixToPostfix(infixExp);
                        lblResult.setText(ps.converToPostfix());
                        lblForm.setText("Postfix:");
                        txtArea.append(InfixToPostfix.allTwoStacksContent.toString());
                        //dm2.addElement(InfixToPrefixTwoStacks.allTwoStacksContent);

                        btnEvaluate.setEnabled(true);
                    }
                    break;
                
                case 1:
                    
                    if (infixExp.length() == 0) {
                        JOptionPane.showMessageDialog(pnlMain, "Please enter an infix expression");
                        
                    } else {
                        InfixToPrefix pr1 = new InfixToPrefix(infixExp);
                        lblResult.setText(pr1.convertToPrefix());
                        //dm2.addElement(InfixToPrefixTwoStacks.allTwoStacksContent);
                        txtArea.append(InfixToPrefix.allTwoStacksContent.toString());
                        lblForm.setText("Prefix:");
                        
                        btnEvaluate.setEnabled(true);
                        
                    }
                    
                    break;
                case 2:
                    
                    if (infixExp.length() == 0) {
                        JOptionPane.showMessageDialog(pnlMain, "Please enter an infix expression");
                        
                    } else {
                        InfixToPrefixTwoStacks pr2 = new InfixToPrefixTwoStacks(infixExp);
                        lblResult.setText(pr2.convertToPrefix());
                        txtArea.append(InfixToPrefixTwoStacks.allTwoStacksContent.toString());
                        
                        lblForm.setText("Prefix:");
                        //dm2.addElement(InfixToPrefixTwoStacks.allTwoStacksContent);     
                        btnEvaluate.setEnabled(true);
                        
                    }
                    break;
                
            }

            //System.out.println("Now I will print the stack:"+InfixToPrefixTwoStacks.allTwoStacksContent);
            //dm2.addElement(InfixToPrefixTwoStacks.allTwoStacksContent);
        } else {
            
            JOptionPane.showMessageDialog(pnlMain, "The Following Expression:" + infixExp + " is NOT valid");
            
        }
    }//GEN-LAST:event_cmboActionPerformed

    private void btnEvaluateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluateActionPerformed
        
        String expReady = lblResult.getText();
        
        if (expReady.length() > 0) {
            int answer = EvaluateExpression.evaluateExpression(expReady);
            lblAns.setText(answer + "");
        }
    }//GEN-LAST:event_btnEvaluateActionPerformed

    private void btnEvaluate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluate1ActionPerformed
        
        txtFInfix.setText("");
        lblResult.setText("");
        lblAns.setText("");
        lblForm.setText("");
        btnEvaluate.setEnabled(false);
        cmbo.setSelectedIndex(-1);
        txtArea.setText("");
    }//GEN-LAST:event_btnEvaluate1ActionPerformed

    private void lstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstMouseClicked
        
        txtFInfix.setText(lst.getSelectedValue());
    }//GEN-LAST:event_lstMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Visual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEvaluate;
    private javax.swing.JButton btnEvaluate1;
    private javax.swing.JComboBox<String> cmbo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAns;
    private javax.swing.JLabel lblConvert;
    private javax.swing.JLabel lblConvert1;
    private javax.swing.JLabel lblForm;
    private javax.swing.JLabel lblInfix;
    private javax.swing.JLabel lblResult;
    private javax.swing.JList<String> lst;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtFInfix;
    // End of variables declaration//GEN-END:variables
}
